{"ast":null,"code":"import { GraphQLClient } from '../classes/GraphQLClient.js';\n// dprint-ignore\n// eslint-disable-next-line\nexport async function request(urlOrOptions, document) {\n  for (var _len = arguments.length, variablesAndRequestHeaders = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    variablesAndRequestHeaders[_key - 2] = arguments[_key];\n  }\n  const requestOptions = parseRequestExtendedArgs(urlOrOptions, document, ...variablesAndRequestHeaders);\n  const client = new GraphQLClient(requestOptions.url);\n  return client.request({\n    ...requestOptions\n  });\n}\nexport const parseRequestArgs = (documentOrOptions, variables, requestHeaders) => {\n  return documentOrOptions.document ? documentOrOptions : {\n    document: documentOrOptions,\n    variables: variables,\n    requestHeaders: requestHeaders,\n    signal: undefined\n  };\n};\nexport const parseRequestExtendedArgs = function (urlOrOptions, document) {\n  for (var _len2 = arguments.length, variablesAndRequestHeaders = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    variablesAndRequestHeaders[_key2 - 2] = arguments[_key2];\n  }\n  const [variables, requestHeaders] = variablesAndRequestHeaders;\n  return typeof urlOrOptions === `string` ? {\n    url: urlOrOptions,\n    document: document,\n    variables,\n    requestHeaders,\n    signal: undefined\n  } : urlOrOptions;\n};","map":{"version":3,"names":["GraphQLClient","request","urlOrOptions","document","_len","arguments","length","variablesAndRequestHeaders","Array","_key","requestOptions","parseRequestExtendedArgs","client","url","parseRequestArgs","documentOrOptions","variables","requestHeaders","signal","undefined","_len2","_key2"],"sources":["/workspaces/Image-to-SVG/frontend/node_modules/graphql-request/src/legacy/functions/request.ts"],"sourcesContent":["import type { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport { GraphQLClient } from '../classes/GraphQLClient.js'\nimport type { RequestDocument, RequestOptions, Variables, VariablesAndRequestHeadersArgs } from '../helpers/types.js'\n\n/**\n * Send a GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\n// REMARKS: In order to have autocomplete for options work make it the first overload. If not\n// then autocomplete will instead show the various methods for a string, which is not what we want.\n\n// dprint-ignore\nexport async function request<T, V extends Variables = Variables>(options: RequestExtendedOptions<V, T>): Promise<T>\n// dprint-ignore\nexport async function request<T, V extends Variables = Variables>(url: string, document: RequestDocument | TypedDocumentNode<T, V>, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>): Promise<T>\n// dprint-ignore\n// eslint-disable-next-line\nexport async function request<T, V extends Variables = Variables>(urlOrOptions: string | RequestExtendedOptions<V, T>, document?: RequestDocument | TypedDocumentNode<T, V>, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>): Promise<T> {\n  const requestOptions = parseRequestExtendedArgs<V>(urlOrOptions, document, ...variablesAndRequestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.request<T, V>({\n    ...requestOptions,\n  })\n}\n\nexport const parseRequestArgs = <V extends Variables = Variables>(\n  documentOrOptions: RequestDocument | RequestOptions<V>,\n  variables?: V,\n  requestHeaders?: HeadersInit,\n): RequestOptions<V> => {\n  return (documentOrOptions as RequestOptions<V>).document\n    ? (documentOrOptions as RequestOptions<V>)\n    : ({\n      document: documentOrOptions as RequestDocument,\n      variables: variables,\n      requestHeaders: requestHeaders,\n      signal: undefined,\n    } as unknown as RequestOptions<V>)\n}\n\nexport type RequestExtendedOptions<V extends Variables = Variables, T = unknown> = {\n  url: string\n} & RequestOptions<V, T>\n\nexport const parseRequestExtendedArgs = <V extends Variables = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V>,\n  document?: RequestDocument,\n  ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n): RequestExtendedOptions<V> => {\n  const [variables, requestHeaders] = variablesAndRequestHeaders\n  return typeof urlOrOptions === `string`\n    ? ({\n      url: urlOrOptions,\n      document: document as RequestDocument,\n      variables,\n      requestHeaders,\n      signal: undefined,\n    } as unknown as RequestExtendedOptions<V>)\n    : urlOrOptions\n}\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,6BAA6B;AA4C3D;AACA;AACA,OAAO,eAAeC,OAAOA,CAAqCC,YAAmD,EAAEC,QAAoD,EAAkE;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAA7DC,0BAA6D,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAA7DF,0BAA6D,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC3O,MAAMC,cAAc,GAAGC,wBAAwB,CAAIT,YAAY,EAAEC,QAAQ,EAAE,GAAGI,0BAA0B,CAAC;EACzG,MAAMK,MAAM,GAAG,IAAIZ,aAAa,CAACU,cAAc,CAACG,GAAG,CAAC;EACpD,OAAOD,MAAM,CAACX,OAAO,CAAO;IAC1B,GAAGS;GACJ,CAAC;AACJ;AAEA,OAAO,MAAMI,gBAAgB,GAAGA,CAC9BC,iBAAsD,EACtDC,SAAa,EACbC,cAA4B,KACP;EACrB,OAAQF,iBAAuC,CAACZ,QAAQ,GACnDY,iBAAuC,GACvC;IACDZ,QAAQ,EAAEY,iBAAoC;IAC9CC,SAAS,EAAEA,SAAS;IACpBC,cAAc,EAAEA,cAAc;IAC9BC,MAAM,EAAEC;GACwB;AACtC,CAAC;AAMD,OAAO,MAAMR,wBAAwB,GAAG,SAAAA,CACtCT,YAAgD,EAChDC,QAA0B,EAEG;EAAA,SAAAiB,KAAA,GAAAf,SAAA,CAAAC,MAAA,EAD1BC,0BAA6D,OAAAC,KAAA,CAAAY,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAA7Dd,0BAA6D,CAAAc,KAAA,QAAAhB,SAAA,CAAAgB,KAAA;EAAA;EAEhE,MAAM,CAACL,SAAS,EAAEC,cAAc,CAAC,GAAGV,0BAA0B;EAC9D,OAAO,OAAOL,YAAY,KAAK,QAAQ,GAClC;IACDW,GAAG,EAAEX,YAAY;IACjBC,QAAQ,EAAEA,QAA2B;IACrCa,SAAS;IACTC,cAAc;IACdC,MAAM,EAAEC;GACgC,GACxCjB,YAAY;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}